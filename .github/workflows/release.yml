name: Release

on:
  release:
    types:
      - created
      - edited
  push:
    branches:
      - 'wheel/**'
      - test-build-refactor.1

jobs:

  build_Windows_wheels:
    name: Build Windows wheels
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Hash tket source
      id: hash_tket_source
      run: |
        Function Get-FolderHash
        {
            param ($folder)
            $files = dir $folder -Recurse |? { -not $_.psiscontainer }
            $allBytes = new-object System.Collections.Generic.List[byte]
            foreach ($file in $files)
            {
                $allBytes.AddRange([System.IO.File]::ReadAllBytes($file.FullName))
                $allBytes.AddRange([System.Text.Encoding]::UTF8.GetBytes($file.Name))
            }
            $hasher = [System.Security.Cryptography.MD5]::Create()
            $ret = [string]::Join("",$($hasher.ComputeHash($allBytes.ToArray()) | %{"{0:x2}" -f $_}))
            return $ret
        }
        $tket_hash = Get-FolderHash tket
        echo "::set-output name=tket_hash::${tket_hash}"
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Install conan
      run: |
        pip install conan
        conan profile new tket --detect
        conan profile update options.tket:shared=True tket
        $conan_cmd = (gcm conan).Path
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: Cache tket build
      id: cache-tket
      uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\.conan\data\tket
        key: ${{ runner.os }}-tket-tket-${{ steps.hash_tket_source.outputs.tket_hash }}-7
    - name: Build symengine
      run: conan create --profile=tket recipes/symengine
    - name: Build tket
      if: steps.cache-tket.outputs.cache-hit != 'true'
      run: conan create --profile=tket recipes/tket
    - name: Install pybind11
      run: conan create --profile=tket recipes/pybind11
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Build wheel (3.7)
      run: |
        pip install wheel
        cd pytket
        python -m pip install -U pip setuptools_scm
        python setup.py bdist_wheel -d "${{ github.workspace }}/wheelhouse/3.7"
    - uses: actions/upload-artifact@v2
      with:
        name: Windows_wheels
        path: wheelhouse/
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Build wheel (3.8)
      run: |
        pip install wheel
        cd pytket
        python -m pip install -U pip setuptools_scm
        python setup.py bdist_wheel -d "${{ github.workspace }}/wheelhouse/3.8"
    - uses: actions/upload-artifact@v2
      with:
        name: Windows_wheels
        path: wheelhouse/
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build wheel (3.9)
      run: |
        pip install wheel
        cd pytket
        python -m pip install -U pip setuptools_scm
        python setup.py bdist_wheel -d "${{ github.workspace }}/wheelhouse/3.9"
    - uses: actions/upload-artifact@v2
      with:
        name: Windows_wheels
        path: wheelhouse/

  test_Windows_wheels:
    name: Test Windows wheels
    needs: build_Windows_wheels
    runs-on: windows-2019
    env:
      PYTKET_SKIP_REGISTRATION: "true"
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download wheels
      uses: actions/download-artifact@v2
      with:
        name: Windows_wheels
        path: wheelhouse/
    - name: Install wheel
      shell: bash
      run: for i in wheelhouse/${{ matrix.python-version }}/pytket-*.whl ; do pip install $i ; done
    - uses: actions/checkout@v2
      with:
          path: tket
    - name: Run tests
      run: |
        pip install pytest hypothesis
        cd tket/pytket/tests
        pip install -r requirements.txt
        pytest --ignore=simulator/ --doctest-modules
