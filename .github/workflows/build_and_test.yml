name: Build and test

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - develop
      - test-build-refactor.1
  schedule:
    # 03:00 every Saturday morning
    - cron: '0 3 * * 6'

jobs:

  windows:
    name: Build and test (Windows)
    runs-on: windows-2019
    env:
      PYTKET_SKIP_REGISTRATION: "true"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Hash tket source
      id: hash_tket_source
      run: |
        Function Get-FolderHash
        {
            param ($folder)
            $files = dir $folder -Recurse |? { -not $_.psiscontainer }
            $allBytes = new-object System.Collections.Generic.List[byte]
            foreach ($file in $files)
            {
                $allBytes.AddRange([System.IO.File]::ReadAllBytes($file.FullName))
                $allBytes.AddRange([System.Text.Encoding]::UTF8.GetBytes($file.Name))
            }
            $hasher = [System.Security.Cryptography.MD5]::Create()
            $ret = [string]::Join("",$($hasher.ComputeHash($allBytes.ToArray()) | %{"{0:x2}" -f $_}))
            return $ret
        }
        $tket_hash = Get-FolderHash tket
        echo "::set-output name=tket_hash::${tket_hash}"
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Install conan
      run: |
        pip install conan
        conan profile new tket --detect
        conan profile update options.tket:shared=True tket
        $conan_cmd = (gcm conan).Path
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: Cache tket build
      id: cache-tket
      uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\.conan\data\tket
        key: ${{ runner.os }}-tket-tket-${{ steps.hash_tket_source.outputs.tket_hash }}-13
    - name: Build symengine
      run: conan create --profile=tket recipes/symengine
    - name: Build tket
      if: steps.cache-tket.outputs.cache-hit != 'true'
      run: conan create --profile=tket recipes/tket
    - name: Build and run tket tests
      run: conan create --profile=tket recipes/tket-tests
    - name: Build and run tket proptests
      run: conan create --profile=tket recipes/tket-proptests
    - name: Install pybind11
      run: conan create --profile=tket recipes/pybind11
    - name: Set up Python 3.7
      if: github.event_name == 'push'
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Build and test pytket (3.7)
      if: github.event_name == 'push'
      run: |
        cd pytket
        pip install -e . -v
        cd tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Set up Python 3.8
      if: github.event_name == 'pull_request'
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Build and test pytket (3.8)
      if: github.event_name == 'pull_request'
      run: |
        cd pytket
        pip install -e . -v
        cd tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
    - name: Set up Python 3.9
      if: github.event_name == 'schedule'
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build and test pytket (3.9)
      if: github.event_name == 'schedule'
      run: |
        cd pytket
        pip install -e . -v
        cd tests
        pip install -r requirements.txt
        pip install -r requirements-openfermion.txt
        pytest --ignore=simulator/ --doctest-modules
